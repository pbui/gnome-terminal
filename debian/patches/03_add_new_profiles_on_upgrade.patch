diff -Nur -x '*.orig' -x '*~' gnome-terminal-2.29.6/src/terminal-app.c gnome-terminal-2.29.6.new/src/terminal-app.c
--- gnome-terminal-2.29.6/src/terminal-app.c	2009-12-09 19:37:35.000000000 +0000
+++ gnome-terminal-2.29.6.new/src/terminal-app.c	2010-03-04 21:22:16.759818334 +0000
@@ -1175,6 +1175,117 @@
   gtk_dialog_set_response_sensitive (dialog, GTK_RESPONSE_ACCEPT, name[0] != '\0');
 }
 
+static void
+copy_to_list (gpointer data,
+              gpointer user_data)
+{
+  const char *name = (const char *) data;
+  GSList **profile_list = (GSList **) user_data;
+
+  *profile_list = g_slist_prepend (*profile_list, g_strdup (name));  
+}
+
+static void
+copy_value_to_list (gpointer data,
+                    gpointer user_data)
+{
+  GConfValue *val = (GConfValue *) data;
+  GSList **list = (GSList **) user_data;
+  const char *name;
+
+  name = gconf_value_get_string (val);
+  *list = g_slist_prepend (*list, g_strdup (name));
+}
+
+static void
+remove_value_from_list (gpointer data,
+                        gpointer user_data)
+{
+  GConfValue *val = (GConfValue *) data;
+  GSList **profiles_to_add = (GSList **) user_data;
+  GSList *node;
+  const char *name;
+
+  name = gconf_value_get_string (val);
+  if (name != NULL) {
+    node = g_slist_find_custom (*profiles_to_add, name, (GCompareFunc) g_strcmp0);
+    if (node != NULL) {
+      *profiles_to_add = g_slist_delete_link (*profiles_to_add, node);
+    }
+  }
+}
+
+static void
+add_basename_to_list (gpointer data,
+                      gpointer user_data)
+{
+  const char *path = (const char *) data;
+  GSList **list = (GSList **) user_data;
+  const char *basename;
+
+  basename = strrchr (path, '/');
+  if (++basename != NULL) {
+    *list = g_slist_prepend (*list, g_strdup (basename));
+  }
+}
+
+static void
+terminal_app_catch_new_profiles (TerminalApp *app)
+{
+  GConfValue *val;
+  GSList *profile_list, *profiles_dirs;
+  GSList *profiles_to_add = NULL;
+  GSList *new_profile_list = NULL;
+  GError *error = NULL;
+
+  val = gconf_client_get (app->conf, PROFILE_LIST_KEY, &error);
+  if (error != NULL) {
+    g_warning ("Failed to read profile list: %s", error->message);
+    g_error_free (error);
+    goto out;
+  }
+
+  if (val != NULL && (val->type != GCONF_VALUE_LIST || gconf_value_get_list_type (val) != GCONF_VALUE_STRING)) {
+    g_warning ("Invalid profile list");
+    goto out;
+  }
+
+  profiles_dirs = gconf_client_all_dirs (app->conf, CONF_PROFILES_PREFIX, &error);
+  if (error != NULL) {
+    g_warning ("Failed to read profile directories: %s", error->message);
+    g_error_free (error);
+    goto out;
+  }
+
+  g_slist_foreach (profiles_dirs, (GFunc) add_basename_to_list, &profiles_to_add);
+
+  if (val != NULL) {
+    profile_list = gconf_value_get_list (val);
+    g_slist_foreach (profile_list, (GFunc) remove_value_from_list, &profiles_to_add);
+    g_slist_foreach (profile_list, (GFunc) copy_value_to_list, &new_profile_list);
+  }
+
+  g_slist_foreach (profiles_to_add, (GFunc) copy_to_list, &new_profile_list);
+
+  if (!gconf_client_set_list (app->conf, PROFILE_LIST_KEY, GCONF_VALUE_STRING, new_profile_list, &error)) {
+    g_warning ("Failed to update profile list: %s", error->message);
+    g_error_free (error);
+  }
+
+out:
+  if (val != NULL)
+    gconf_value_free (val);
+
+  g_slist_foreach (profiles_dirs, (GFunc) g_free, NULL);
+  g_slist_free (profiles_dirs);
+
+  g_slist_foreach (profiles_to_add, (GFunc) g_free, NULL);
+  g_slist_free (profiles_to_add);
+
+  g_slist_foreach (new_profile_list, (GFunc) g_free, NULL);
+  g_slist_free (new_profile_list);
+}
+
 void
 terminal_app_new_profile (TerminalApp     *app,
                           TerminalProfile *default_base_profile,
@@ -1440,6 +1551,8 @@
   gconf_client_notify (app->conf, ENABLE_MENU_BAR_ACCEL_KEY);
   gconf_client_notify (app->conf, ENABLE_MNEMONICS_KEY);
 
+  terminal_app_catch_new_profiles (app);
+
   /* Ensure we have valid settings */
   g_assert (app->default_profile_id != NULL);
   g_assert (app->system_font_desc != NULL);
