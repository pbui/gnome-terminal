Origin: backport 221b7e917912f488d9c369d728df128667fc6996
Bug-Ubuntu: https://launchpad.net/bugs/1681585

From 221b7e917912f488d9c369d728df128667fc6996 Mon Sep 17 00:00:00 2001
From: Sjoerd Simons <sjoerd@luon.net>
Date: Sun, 4 Sep 2016 14:30:05 +0200
Subject: [PATCH] window: Fix CSD size calculations with long titles

To get the size of the window use the actual allocation rather then the
preferred size as the latter takes into account the natural size of the
title bar as well as the content which throws of calculation when the
natural size of the title bar is wider then the content.

Also use the actual allocation of the content specifically for the
calculation of the CSD size such that both are in sync, but keep using
the preferred size otherwise as those values get used for resizing
calculations.

https://bugzilla.gnome.org/show_bug.cgi?id=769898
(cherry picked from commit cae04637f696e30f9054482411eb0fabd6064a84)

Index: gnome-terminal-3.20.2/src/terminal-window.c
===================================================================
--- gnome-terminal-3.20.2.orig/src/terminal-window.c
+++ gnome-terminal-3.20.2/src/terminal-window.c
@@ -3659,12 +3659,12 @@ terminal_window_update_geometry (Termina
 {
   TerminalWindowPrivate *priv = window->priv;
   GtkWidget *widget;
-  GtkRequisition toplevel_request, vbox_request;
+  GtkRequisition vbox_request;
   GdkGeometry hints;
   int grid_width, grid_height;
   int char_width, char_height;
   int chrome_width, chrome_height;
-  int csd_width, csd_height;
+  int csd_width = 0, csd_height = 0;
 
   if (priv->active_screen == NULL)
     return;
@@ -3686,26 +3686,41 @@ terminal_window_update_geometry (Termina
   _terminal_debug_print (TERMINAL_DEBUG_GEOMETRY, "content area requests %dx%d px\n",
                          vbox_request.width, vbox_request.height);
 
-  gtk_widget_get_preferred_size (GTK_WIDGET (window), NULL, &toplevel_request);
-  _terminal_debug_print (TERMINAL_DEBUG_GEOMETRY, "window requests %dx%d px\n",
-                         toplevel_request.width, toplevel_request.height);
 
   chrome_width = vbox_request.width - (char_width * grid_width);
   chrome_height = vbox_request.height - (char_height * grid_height);
   _terminal_debug_print (TERMINAL_DEBUG_GEOMETRY, "chrome: %dx%d px\n",
                          chrome_width, chrome_height);
 
-  csd_width = toplevel_request.width - vbox_request.width;
-  csd_height = toplevel_request.height - vbox_request.height;
-  _terminal_debug_print (TERMINAL_DEBUG_GEOMETRY, "CSDs: %dx%d px%s\n",
-                         csd_width, csd_height,
-                         priv->realized ? "" : " (just a guess)");
+  if (priv->realized)
+    {
+      /* Only when having been realize the CSD can be calculated. Do this by
+       * using the actual allocation rather then the preferred size as the
+       * the preferred size takes the natural size of e.g. the title bar into
+       * account which can be far wider then the contents size when using a
+       * very long title */
+      GtkAllocation toplevel_allocation, vbox_allocation;
+
+      gtk_widget_get_allocation (GTK_WIDGET (priv->main_vbox), &vbox_allocation);
+      _terminal_debug_print (TERMINAL_DEBUG_GEOMETRY,
+                         "terminal widget allocation %dx%d px\n",
+                         vbox_allocation.width, vbox_allocation.height);
+
+      gtk_widget_get_allocation (GTK_WIDGET (window), &toplevel_allocation);
+      _terminal_debug_print (TERMINAL_DEBUG_GEOMETRY, "window allocation %dx%d px\n",
+                         toplevel_allocation.width, toplevel_allocation.height);
+
+      csd_width =  toplevel_allocation.width - vbox_allocation.width;
+      csd_height = toplevel_allocation.height - vbox_allocation.height;
+      _terminal_debug_print (TERMINAL_DEBUG_GEOMETRY, "CSDs: %dx%d px\n",
+                             csd_width, csd_height);
+    }
 
   if (!priv->realized)
     {
       /* Don't actually set the geometry hints until we have been realized,
-       * because we don't know precisely how large the client-side decorations
-       * are going to be. We also avoid setting priv->old_csd_width or
+       * because we don't know how large the client-side decorations are going
+       * to be. We also avoid setting priv->old_csd_width or
        * priv->old_csd_height, so that next time through this function we'll
        * definitely recalculate the hints. */
     }
