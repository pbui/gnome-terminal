Description: This patch allows the background transparency to be controlled from the GTK theme (using "TerminalScreen::background-darkness"). In addition to this, the background colour and text colour are already themable from the GTK theme (by setting the "text[NORMAL]" and "base[NORMAL]" colours for the TerminalScreen class)
Author: ?

--- a/src/gnome-terminal.schemas.in
+++ b/src/gnome-terminal.schemas.in
@@ -672,6 +672,21 @@
     </schema>
 
     <schema>
+      <key>/schemas/apps/gnome-terminal/profiles/Default/use_theme_background</key>
+      <applyto>/apps/gnome-terminal/profiles/Default/use_theme_background</applyto>
+      <owner>gnome-terminal</owner>
+      <type>bool</type>
+      <default>true</default>
+      <locale name="C">
+         <short>Whether to use the transparency setting from the theme for the terminal widget</short>
+         <long>
+        If true, the transparency setting defined in the theme will be used for defining the 
+        background type of the terminal, instead of the settings provided by the user.
+         </long>
+      </locale>
+    </schema>
+
+    <schema>
       <key>/schemas/apps/gnome-terminal/profiles/Default/use_system_font</key>
       <applyto>/apps/gnome-terminal/profiles/Default/use_system_font</applyto>
       <owner>gnome-terminal</owner>
--- a/src/terminal-profile.c
+++ b/src/terminal-profile.c
@@ -83,6 +83,7 @@ enum
   PROP_USE_SKEY,
   PROP_USE_SYSTEM_FONT,
   PROP_USE_THEME_COLORS,
+  PROP_USE_THEME_BACKGROUND,
   PROP_VISIBLE_NAME,
   PROP_WORD_CHARS,
   LAST_PROP
@@ -122,6 +123,7 @@ enum
 #define KEY_USE_SKEY "use_skey"
 #define KEY_USE_SYSTEM_FONT "use_system_font"
 #define KEY_USE_THEME_COLORS "use_theme_colors"
+#define KEY_USE_THEME_BACKGROUND "use_theme_background"
 #define KEY_VISIBLE_NAME "visible_name"
 #define KEY_WORD_CHARS "word_chars"
 
@@ -161,6 +163,7 @@ enum
 #define DEFAULT_USE_SKEY              (TRUE)
 #define DEFAULT_USE_SYSTEM_FONT       (TRUE)
 #define DEFAULT_USE_THEME_COLORS      (TRUE)
+#define DEFAULT_USE_THEME_BACKGROUND  (TRUE)
 #define DEFAULT_VISIBLE_NAME          (N_("Unnamed"))
 #define DEFAULT_WORD_CHARS            ("-A-Za-z0-9,./?%&#:_=+@~")
 
@@ -1010,7 +1013,6 @@ terminal_profile_constructor (GType type
             is_construct = TRUE;
             break;
           }
-
       if (is_construct)
         continue;
 
@@ -1304,6 +1306,7 @@ terminal_profile_class_init (TerminalPro
   TERMINAL_PROFILE_PROPERTY_BOOLEAN (USE_SKEY, DEFAULT_USE_SKEY, KEY_USE_SKEY);
   TERMINAL_PROFILE_PROPERTY_BOOLEAN (USE_SYSTEM_FONT, DEFAULT_USE_SYSTEM_FONT, KEY_USE_SYSTEM_FONT);
   TERMINAL_PROFILE_PROPERTY_BOOLEAN (USE_THEME_COLORS, DEFAULT_USE_THEME_COLORS, KEY_USE_THEME_COLORS);
+  TERMINAL_PROFILE_PROPERTY_BOOLEAN (USE_THEME_BACKGROUND, DEFAULT_USE_THEME_BACKGROUND, KEY_USE_THEME_BACKGROUND);
 
   TERMINAL_PROFILE_PROPERTY_BOXED (BACKGROUND_COLOR, GDK_TYPE_COLOR, KEY_BACKGROUND_COLOR);
   TERMINAL_PROFILE_PROPERTY_BOXED (BOLD_COLOR, GDK_TYPE_COLOR, KEY_BOLD_COLOR);
--- a/src/terminal-profile.h
+++ b/src/terminal-profile.h
@@ -101,6 +101,7 @@ typedef enum
 #define TERMINAL_PROFILE_USE_SKEY               "use-skey"
 #define TERMINAL_PROFILE_USE_SYSTEM_FONT        "use-system-font"
 #define TERMINAL_PROFILE_USE_THEME_COLORS       "use-theme-colors"
+#define TERMINAL_PROFILE_USE_THEME_BACKGROUND	"use-theme-background"
 #define TERMINAL_PROFILE_VISIBLE_NAME           "visible-name"
 #define TERMINAL_PROFILE_WORD_CHARS             "word-chars"
 
--- a/src/terminal-screen.c
+++ b/src/terminal-screen.c
@@ -325,13 +325,27 @@ terminal_screen_realize (GtkWidget *widg
 {
   TerminalScreen *screen = TERMINAL_SCREEN (widget);
   TerminalScreenPrivate *priv = screen->priv;
+  TerminalProfile *profile = priv->profile;
   TerminalBackgroundType bg_type;
+  gfloat style_darkness;
 
   GTK_WIDGET_CLASS (terminal_screen_parent_class)->realize (widget);
 
   g_assert (priv->window != NULL);
 
+  gtk_widget_style_get (widget,
+                        "background-darkness", &style_darkness,
+                        NULL);
+
   /* FIXME: Don't enable this if we have a compmgr. */
+  if (terminal_profile_get_property_boolean (profile, TERMINAL_PROFILE_USE_THEME_BACKGROUND))
+    {
+      bg_type = style_darkness < 1 ? TERMINAL_BACKGROUND_TRANSPARENT : TERMINAL_BACKGROUND_SOLID;
+    }
+  else
+    {
+      bg_type = terminal_profile_get_property_enum (profile, TERMINAL_PROFILE_BACKGROUND_TYPE);
+    }
   bg_type = terminal_profile_get_property_enum (priv->profile, TERMINAL_PROFILE_BACKGROUND_TYPE);
   vte_terminal_set_background_transparent (VTE_TERMINAL (screen),
                                            bg_type == TERMINAL_BACKGROUND_TRANSPARENT &&
@@ -339,6 +353,65 @@ terminal_screen_realize (GtkWidget *widg
 }
 
 static void
+update_background (TerminalScreen *screen)
+{
+  TerminalScreenPrivate *priv = screen->priv;
+  TerminalBackgroundType bg_type;
+  TerminalProfile *profile = priv->profile;
+  VteTerminal *vte_terminal = VTE_TERMINAL (screen);
+  gfloat style_darkness;
+  gdouble opacity;
+  gboolean use_theme_background;
+
+  gtk_widget_style_get (GTK_WIDGET (screen),
+                        "background-darkness", &style_darkness,
+                        NULL);
+  use_theme_background = terminal_profile_get_property_boolean (profile, TERMINAL_PROFILE_USE_THEME_BACKGROUND);
+
+  if (use_theme_background)
+    {
+      bg_type = style_darkness < 1 ? TERMINAL_BACKGROUND_TRANSPARENT : TERMINAL_BACKGROUND_SOLID;
+    }
+  else
+    {
+      bg_type = terminal_profile_get_property_enum (profile, TERMINAL_PROFILE_BACKGROUND_TYPE);
+    }
+
+  if (bg_type == TERMINAL_BACKGROUND_IMAGE)
+    {
+      vte_terminal_set_background_image (vte_terminal,
+                                         terminal_profile_get_property_object (profile, TERMINAL_PROFILE_BACKGROUND_IMAGE));
+      vte_terminal_set_scroll_background (vte_terminal,
+                                          terminal_profile_get_property_boolean (profile, TERMINAL_PROFILE_SCROLL_BACKGROUND));
+    }
+  else
+    {
+      vte_terminal_set_background_image (vte_terminal, NULL);
+      vte_terminal_set_scroll_background (vte_terminal, FALSE);
+    }
+
+  if (bg_type == TERMINAL_BACKGROUND_IMAGE ||
+      bg_type == TERMINAL_BACKGROUND_TRANSPARENT)
+    {
+      opacity = use_theme_background ? (gdouble) style_darkness : terminal_profile_get_property_double (profile, TERMINAL_PROFILE_BACKGROUND_DARKNESS);
+      vte_terminal_set_background_saturation (vte_terminal,
+                                              1.0 - opacity);
+      vte_terminal_set_opacity (vte_terminal,
+                                0xffff * opacity);
+    }
+  else
+    {
+      vte_terminal_set_background_saturation (vte_terminal, 1.0); /* normal color */
+      vte_terminal_set_opacity (vte_terminal, 0xffff);
+    }
+
+  /* FIXME: Don't enable this if we have a compmgr. */
+  vte_terminal_set_background_transparent (vte_terminal,
+                                           bg_type == TERMINAL_BACKGROUND_TRANSPARENT &&
+                                           (!priv->window || !terminal_window_uses_argb_visual (priv->window)));
+}
+
+static void
 terminal_screen_style_set (GtkWidget *widget,
                            GtkStyle *previous_style)
 {
@@ -349,6 +422,7 @@ terminal_screen_style_set (GtkWidget *wi
     style_set (widget, previous_style);
 
   update_color_scheme (screen);
+  update_background (screen);
 
   if (GTK_WIDGET_REALIZED (widget))
     terminal_screen_change_font (screen);
@@ -628,6 +702,12 @@ terminal_screen_class_init (TerminalScre
                          G_TYPE_STRV,
                          G_PARAM_READWRITE | G_PARAM_STATIC_NAME | G_PARAM_STATIC_NICK | G_PARAM_STATIC_BLURB));
 
+  gtk_widget_class_install_style_property
+    (widget_class,
+     g_param_spec_float ("background-darkness", NULL, NULL,
+                         0, 1, 1,
+                         G_PARAM_READABLE | G_PARAM_STATIC_NAME | G_PARAM_STATIC_NICK | G_PARAM_STATIC_BLURB));
+
   g_type_class_add_private (object_class, sizeof (TerminalScreenPrivate));
 
   /* Precompile the regexes */
@@ -938,7 +1018,6 @@ terminal_screen_profile_notify_cb (Termi
   GObject *object = G_OBJECT (screen);
   VteTerminal *vte_terminal = VTE_TERMINAL (screen);
   const char *prop_name;
-  TerminalBackgroundType bg_type;
 
   if (pspec)
     prop_name = pspec->name;
@@ -1030,42 +1109,9 @@ terminal_screen_profile_notify_cb (Termi
       prop_name == I_(TERMINAL_PROFILE_BACKGROUND_TYPE) ||
       prop_name == I_(TERMINAL_PROFILE_BACKGROUND_IMAGE) ||
       prop_name == I_(TERMINAL_PROFILE_BACKGROUND_DARKNESS) ||
-      prop_name == I_(TERMINAL_PROFILE_SCROLL_BACKGROUND))
-    {
-      bg_type = terminal_profile_get_property_enum (profile, TERMINAL_PROFILE_BACKGROUND_TYPE);
-
-      if (bg_type == TERMINAL_BACKGROUND_IMAGE)
-        {
-          vte_terminal_set_background_image (vte_terminal,
-                                             terminal_profile_get_property_object (profile, TERMINAL_PROFILE_BACKGROUND_IMAGE));
-          vte_terminal_set_scroll_background (vte_terminal,
-                                              terminal_profile_get_property_boolean (profile, TERMINAL_PROFILE_SCROLL_BACKGROUND));
-        }
-      else
-        {
-          vte_terminal_set_background_image (vte_terminal, NULL);
-          vte_terminal_set_scroll_background (vte_terminal, FALSE);
-        }
-
-      if (bg_type == TERMINAL_BACKGROUND_IMAGE ||
-          bg_type == TERMINAL_BACKGROUND_TRANSPARENT)
-        {
-          vte_terminal_set_background_saturation (vte_terminal,
-                                                  1.0 - terminal_profile_get_property_double (profile, TERMINAL_PROFILE_BACKGROUND_DARKNESS));
-          vte_terminal_set_opacity (vte_terminal,
-                                    0xffff * terminal_profile_get_property_double (profile, TERMINAL_PROFILE_BACKGROUND_DARKNESS));
-        }
-      else
-        {
-          vte_terminal_set_background_saturation (vte_terminal, 1.0); /* normal color */
-          vte_terminal_set_opacity (vte_terminal, 0xffff);
-        }
-      
-      /* FIXME: Don't enable this if we have a compmgr. */
-      vte_terminal_set_background_transparent (vte_terminal,
-                                               bg_type == TERMINAL_BACKGROUND_TRANSPARENT &&
-                                               (!priv->window || !terminal_window_uses_argb_visual (priv->window)));
-    }
+      prop_name == I_(TERMINAL_PROFILE_SCROLL_BACKGROUND) ||
+      prop_name == I_(TERMINAL_PROFILE_USE_THEME_BACKGROUND))
+    update_background (screen);
 
   if (!prop_name || prop_name == I_(TERMINAL_PROFILE_BACKSPACE_BINDING))
   vte_terminal_set_backspace_binding (vte_terminal,
--- a/src/profile-editor.c
+++ b/src/profile-editor.c
@@ -110,7 +110,7 @@ profile_notify_sensitivity_cb (TerminalP
                                GtkWidget *editor)
 {
   TerminalBackgroundType bg_type;
-  gboolean use_custom_locked, palette_locked, bg_type_locked;
+  gboolean use_custom_locked, palette_locked, bg_type_locked, use_theme_background;
   const char *prop_name;
 
   if (pspec)
@@ -130,32 +130,42 @@ profile_notify_sensitivity_cb (TerminalP
                      terminal_profile_get_property_boolean (profile, TERMINAL_PROFILE_USE_CUSTOM_COMMAND) &&
                      !terminal_profile_property_locked (profile, TERMINAL_PROFILE_CUSTOM_COMMAND));
     }
-
-  if (!prop_name || prop_name == I_(TERMINAL_PROFILE_BACKGROUND_TYPE))
+      
+  if (!prop_name || prop_name == I_(TERMINAL_PROFILE_BACKGROUND_TYPE) || prop_name == I_(TERMINAL_PROFILE_USE_THEME_BACKGROUND))
     {
       bg_type_locked = terminal_profile_property_locked (profile, TERMINAL_PROFILE_BACKGROUND_TYPE);
-      SET_SENSITIVE ("solid-radiobutton", !bg_type_locked);
-      SET_SENSITIVE ("image-radiobutton", !bg_type_locked);
-      SET_SENSITIVE ("transparent-radiobutton", !bg_type_locked);
+      use_theme_background = terminal_profile_get_property_boolean (profile, TERMINAL_PROFILE_USE_THEME_BACKGROUND);
+      SET_SENSITIVE ("solid-radiobutton", !bg_type_locked && !use_theme_background);
+      SET_SENSITIVE ("image-radiobutton", !bg_type_locked && !use_theme_background);
+      SET_SENSITIVE ("transparent-radiobutton", !bg_type_locked && !use_theme_background);
 
-      bg_type = terminal_profile_get_property_enum (profile, TERMINAL_PROFILE_BACKGROUND_TYPE);
-      if (bg_type == TERMINAL_BACKGROUND_IMAGE)
-        {
-          SET_SENSITIVE ("background-image-filechooser", !terminal_profile_property_locked (profile, TERMINAL_PROFILE_BACKGROUND_IMAGE_FILE));
-          SET_SENSITIVE ("scroll-background-checkbutton", !terminal_profile_property_locked (profile, TERMINAL_PROFILE_SCROLL_BACKGROUND));
-          SET_SENSITIVE ("darken-background-vbox", !terminal_profile_property_locked (profile, TERMINAL_PROFILE_BACKGROUND_DARKNESS));
-        }
-      else if (bg_type == TERMINAL_BACKGROUND_TRANSPARENT)
+      if (use_theme_background)
         {
           SET_SENSITIVE ("background-image-filechooser", FALSE);
           SET_SENSITIVE ("scroll-background-checkbutton", FALSE);
-          SET_SENSITIVE ("darken-background-vbox", !terminal_profile_property_locked (profile, TERMINAL_PROFILE_BACKGROUND_DARKNESS));
+          SET_SENSITIVE ("darken-background-vbox", FALSE);
         }
       else
         {
-          SET_SENSITIVE ("background-image-filechooser", FALSE);
-          SET_SENSITIVE ("scroll-background-checkbutton", FALSE);
-          SET_SENSITIVE ("darken-background-vbox", FALSE);
+          bg_type = terminal_profile_get_property_enum (profile, TERMINAL_PROFILE_BACKGROUND_TYPE);
+          if (bg_type == TERMINAL_BACKGROUND_IMAGE)
+            {
+              SET_SENSITIVE ("background-image-filechooser", !terminal_profile_property_locked (profile, TERMINAL_PROFILE_BACKGROUND_IMAGE_FILE));
+              SET_SENSITIVE ("scroll-background-checkbutton", !terminal_profile_property_locked (profile, TERMINAL_PROFILE_SCROLL_BACKGROUND));
+              SET_SENSITIVE ("darken-background-vbox", !terminal_profile_property_locked (profile, TERMINAL_PROFILE_BACKGROUND_DARKNESS));
+            }
+          else if (bg_type == TERMINAL_BACKGROUND_TRANSPARENT)
+            {
+              SET_SENSITIVE ("background-image-filechooser", FALSE);
+              SET_SENSITIVE ("scroll-background-checkbutton", FALSE);
+              SET_SENSITIVE ("darken-background-vbox", !terminal_profile_property_locked (profile, TERMINAL_PROFILE_BACKGROUND_DARKNESS));
+            }
+          else
+            {
+              SET_SENSITIVE ("background-image-filechooser", FALSE);
+              SET_SENSITIVE ("scroll-background-checkbutton", FALSE);
+              SET_SENSITIVE ("darken-background-vbox", FALSE);
+            }
         }
     }
 
@@ -845,6 +855,7 @@ terminal_profile_edit (TerminalProfile *
   CONNECT ("update-records-checkbutton", TERMINAL_PROFILE_UPDATE_RECORDS);
   CONNECT ("use-custom-command-checkbutton", TERMINAL_PROFILE_USE_CUSTOM_COMMAND);
   CONNECT ("use-theme-colors-checkbutton", TERMINAL_PROFILE_USE_THEME_COLORS);
+  CONNECT ("use-theme-background-checkbutton", TERMINAL_PROFILE_USE_THEME_BACKGROUND);
   CONNECT ("word-chars-entry", TERMINAL_PROFILE_WORD_CHARS);
   CONNECT_WITH_FLAGS ("bell-checkbutton", TERMINAL_PROFILE_SILENT_BELL, FLAG_INVERT_BOOL);
 
--- a/src/profile-preferences.glade
+++ b/src/profile-preferences.glade
@@ -1924,6 +1924,25 @@ Custom</property>
 	      <property name="spacing">6</property>
 
 	      <child>
+		<widget class="GtkCheckButton" id="use-theme-background-checkbutton">
+		  <property name="visible">True</property>
+		  <property name="can_focus">True</property>
+		  <property name="label" translatable="yes">_Use background settings from system theme</property>
+		  <property name="use_underline">True</property>
+		  <property name="relief">GTK_RELIEF_NORMAL</property>
+		  <property name="focus_on_click">True</property>
+		  <property name="active">True</property>
+		  <property name="inconsistent">False</property>
+		  <property name="draw_indicator">True</property>
+		</widget>
+		<packing>
+		  <property name="padding">0</property>
+		  <property name="expand">False</property>
+		  <property name="fill">False</property>
+		</packing>
+	      </child>
+
+	      <child>
 		<widget class="GtkRadioButton" id="solid-radiobutton">
 		  <property name="visible">True</property>
 		  <property name="can_focus">True</property>
